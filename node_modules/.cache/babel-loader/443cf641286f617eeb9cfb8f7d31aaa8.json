{"ast":null,"code":"import _objectSpread from\"/home/greg2dmax/actinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/greg2dmax/actinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useSprings}from\"react-spring/hooks\";import{useGesture}from\"react-with-gesture\";import Card from\"./Card\";import data from\"../data.js\";import\"../styles/Deck.css\";const to=i=>({x:0,y:i*-10,scale:1,rot:-10+Math.random()*20,delay:i*100});const from=i=>({rot:0,scale:1.5,y:-1000});const trans=(r,s)=>\"perspective(1500px) rotateX(30deg) rotateY(\".concat(r/10,\"deg) rotateZ(\").concat(r,\"deg) scale(\").concat(s,\")\");function Deck(){const _useState=useState(()=>new Set()),_useState2=_slicedToArray(_useState,1),gone=_useState2[0];const _useSprings=useSprings(data.length,i=>_objectSpread({},to(i),{from:from(i)})),_useSprings2=_slicedToArray(_useSprings,2),props=_useSprings2[0],set=_useSprings2[1];const bind=useGesture(({args:[index],down,delta:[xDelta],distance,direction:[xDir],velocity})=>{const trigger=velocity>0.2;const dir=xDir<0?-1:1;if(!down&&trigger)gone.add(index);set(i=>{if(index!==i)return;const isGone=gone.has(index);const x=isGone?(200+window.innerWidth)*dir:down?xDelta:0;const rot=xDelta/100+(isGone?dir*10*velocity:0);const scale=down?1.1:1;return{x,rot,scale,delay:undefined,config:{friction:50,tension:down?800:isGone?200:500}};});if(!down&&gone.size===data.length)setTimeout(()=>gone.clear()||set(i=>to(i)),600);});return props.map(({x,y,rot,scale},i)=>/*#__PURE__*/React.createElement(Card,{i:i,x:x,y:y,rot:rot,scale:scale,trans:trans,data:data,bind:bind}));}export default Deck;","map":{"version":3,"sources":["/home/greg2dmax/actinder/src/components/Deck.js"],"names":["React","useState","useSprings","useGesture","Card","data","to","i","x","y","scale","rot","Math","random","delay","from","trans","r","s","Deck","Set","gone","length","props","set","bind","args","index","down","delta","xDelta","distance","direction","xDir","velocity","trigger","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSprings } from \"react-spring/hooks\";\nimport { useGesture } from \"react-with-gesture\";\n\nimport Card from \"./Card\";\nimport data from \"../data.js\";\n\nimport \"../styles/Deck.css\";\n\nconst to = i => ({\n  x: 0,\n  y: i * -10,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100\n});\nconst from = i => ({ rot: 0, scale: 1.5, y: -1000 });\n\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(30deg) rotateY(${r /\n    10}deg) rotateZ(${r}deg) scale(${s})`;\n\nfunction Deck() {\n  const [gone] = useState(() => new Set());\n\n  const [props, set] = useSprings(data.length, i => ({\n    ...to(i),\n    from: from(i)\n  }));\n\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity\n    }) => {\n      const trigger = velocity > 0.2;\n\n      const dir = xDir < 0 ? -1 : 1;\n\n      if (!down && trigger) gone.add(index);\n\n      set(i => {\n        if (index !== i) return;\n        const isGone = gone.has(index);\n\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n\n        const scale = down ? 1.1 : 1;\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 }\n        };\n      });\n\n      if (!down && gone.size === data.length)\n        setTimeout(() => gone.clear() || set(i => to(i)), 600);\n    }\n  );\n\n  return props.map(({ x, y, rot, scale }, i) => (\n    <Card\n      i={i}\n      x={x}\n      y={y}\n      rot={rot}\n      scale={scale}\n      trans={trans}\n      data={data}\n      bind={bind}\n    />\n  ));\n}\n\nexport default Deck;\n"]},"metadata":{},"sourceType":"module"}