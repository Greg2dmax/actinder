{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nexport var addAccessibility = function addAccessibility(children, slidesToShow, currentSlide) {\n  var needsTabIndex;\n\n  if (slidesToShow > 1) {\n    return React.Children.map(children, function (child, index) {\n      // create a range from first visible slide to last visible slide\n      var firstVisibleSlide = index >= currentSlide;\n      var lastVisibleSlide = index < slidesToShow + currentSlide;\n      needsTabIndex = firstVisibleSlide && lastVisibleSlide; // if the index of the slide is in range add ariaProps to the slide\n\n      var ariaProps = needsTabIndex ? {\n        'aria-hidden': 'false',\n        tabIndex: 0\n      } : {\n        'aria-hidden': 'true'\n      };\n      return React.cloneElement(child, _objectSpread({}, child.props, ariaProps));\n    });\n  } else {\n    // when slidesToshow is 1\n    return React.Children.map(children, function (child, index) {\n      needsTabIndex = index !== currentSlide;\n      var ariaProps = needsTabIndex ? {\n        'aria-hidden': 'true'\n      } : {\n        'aria-hidden': 'false',\n        tabIndex: 0\n      };\n      return React.cloneElement(child, _objectSpread({}, child.props, ariaProps));\n    });\n  }\n};\nexport var getValidChildren = function getValidChildren(children) {\n  // .toArray automatically removes invalid React children\n  return React.Children.toArray(children);\n};\n\nvar findMaxHeightSlide = function findMaxHeightSlide(slides) {\n  var maxHeight = 0;\n\n  for (var i = 0; i < slides.length; i++) {\n    if (slides[i].offsetHeight > maxHeight) {\n      maxHeight = slides[i].offsetHeight;\n    }\n  }\n\n  return maxHeight;\n};\n\nexport var getSlideHeight = function getSlideHeight(props, state) {\n  var childNodes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var heightMode = props.heightMode,\n      vertical = props.vertical,\n      initialSlideHeight = props.initialSlideHeight;\n  var slidesToShow = state.slidesToShow,\n      currentSlide = state.currentSlide;\n  var firstSlide = childNodes[0];\n\n  if (firstSlide && heightMode === 'first') {\n    return vertical ? firstSlide.offsetHeight * slidesToShow : firstSlide.offsetHeight;\n  }\n\n  if (heightMode === 'max') {\n    return findMaxHeightSlide(childNodes);\n  }\n\n  if (heightMode === 'current') {\n    return childNodes[currentSlide].offsetHeight;\n  }\n\n  return initialSlideHeight || 100;\n};","map":{"version":3,"sources":["/home/greg2dmax/actinder/node_modules/nuka-carousel/es/utilities/bootstrapping-utilities.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","React","addAccessibility","children","slidesToShow","currentSlide","needsTabIndex","Children","map","child","index","firstVisibleSlide","lastVisibleSlide","ariaProps","tabIndex","cloneElement","props","getValidChildren","toArray","findMaxHeightSlide","slides","maxHeight","offsetHeight","getSlideHeight","state","childNodes","undefined","heightMode","vertical","initialSlideHeight","firstSlide"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;AAAuD,QAAII,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,CAAd;;AAAmC,QAAI,OAAOE,MAAM,CAACE,qBAAd,KAAwC,UAA5C,EAAwD;AAAEH,MAAAA,OAAO,GAAGA,OAAO,CAACI,MAAR,CAAeH,MAAM,CAACE,qBAAP,CAA6BJ,MAA7B,EAAqCM,MAArC,CAA4C,UAAUC,GAAV,EAAe;AAAE,eAAOL,MAAM,CAACM,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,OAA9H,CAAf,CAAV;AAA4J;;AAACR,IAAAA,OAAO,CAACS,OAAR,CAAgB,UAAUC,GAAV,EAAe;AAAEC,MAAAA,eAAe,CAAChB,MAAD,EAASe,GAAT,EAAcX,MAAM,CAACW,GAAD,CAApB,CAAf;AAA4C,KAA7E;AAAiF;;AAAC,SAAOf,MAAP;AAAgB;;AAEje,SAASgB,eAAT,CAAyBC,GAAzB,EAA8BF,GAA9B,EAAmCG,KAAnC,EAA0C;AAAE,MAAIH,GAAG,IAAIE,GAAX,EAAgB;AAAEX,IAAAA,MAAM,CAACa,cAAP,CAAsBF,GAAtB,EAA2BF,GAA3B,EAAgC;AAAEG,MAAAA,KAAK,EAAEA,KAAT;AAAgBL,MAAAA,UAAU,EAAE,IAA5B;AAAkCO,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEJ,IAAAA,GAAG,CAACF,GAAD,CAAH,GAAWG,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,OAAOK,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,QAA1B,EAAoCC,YAApC,EAAkDC,YAAlD,EAAgE;AAC5F,MAAIC,aAAJ;;AAEA,MAAIF,YAAY,GAAG,CAAnB,EAAsB;AACpB,WAAOH,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmBL,QAAnB,EAA6B,UAAUM,KAAV,EAAiBC,KAAjB,EAAwB;AAC1D;AACA,UAAIC,iBAAiB,GAAGD,KAAK,IAAIL,YAAjC;AACA,UAAIO,gBAAgB,GAAGF,KAAK,GAAGN,YAAY,GAAGC,YAA9C;AACAC,MAAAA,aAAa,GAAGK,iBAAiB,IAAIC,gBAArC,CAJ0D,CAIH;;AAEvD,UAAIC,SAAS,GAAGP,aAAa,GAAG;AAC9B,uBAAe,OADe;AAE9BQ,QAAAA,QAAQ,EAAE;AAFoB,OAAH,GAGzB;AACF,uBAAe;AADb,OAHJ;AAMA,aAAOb,KAAK,CAACc,YAAN,CAAmBN,KAAnB,EAA0B/B,aAAa,CAAC,EAAD,EAAK+B,KAAK,CAACO,KAAX,EAAkBH,SAAlB,CAAvC,CAAP;AACD,KAbM,CAAP;AAcD,GAfD,MAeO;AACL;AACA,WAAOZ,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmBL,QAAnB,EAA6B,UAAUM,KAAV,EAAiBC,KAAjB,EAAwB;AAC1DJ,MAAAA,aAAa,GAAGI,KAAK,KAAKL,YAA1B;AACA,UAAIQ,SAAS,GAAGP,aAAa,GAAG;AAC9B,uBAAe;AADe,OAAH,GAEzB;AACF,uBAAe,OADb;AAEFQ,QAAAA,QAAQ,EAAE;AAFR,OAFJ;AAMA,aAAOb,KAAK,CAACc,YAAN,CAAmBN,KAAnB,EAA0B/B,aAAa,CAAC,EAAD,EAAK+B,KAAK,CAACO,KAAX,EAAkBH,SAAlB,CAAvC,CAAP;AACD,KATM,CAAP;AAUD;AACF,CA/BM;AAgCP,OAAO,IAAII,gBAAgB,GAAG,SAASA,gBAAT,CAA0Bd,QAA1B,EAAoC;AAChE;AACA,SAAOF,KAAK,CAACM,QAAN,CAAeW,OAAf,CAAuBf,QAAvB,CAAP;AACD,CAHM;;AAKP,IAAIgB,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,MAA5B,EAAoC;AAC3D,MAAIC,SAAS,GAAG,CAAhB;;AAEA,OAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwC,MAAM,CAACtC,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AACtC,QAAIwC,MAAM,CAACxC,CAAD,CAAN,CAAU0C,YAAV,GAAyBD,SAA7B,EAAwC;AACtCA,MAAAA,SAAS,GAAGD,MAAM,CAACxC,CAAD,CAAN,CAAU0C,YAAtB;AACD;AACF;;AAED,SAAOD,SAAP;AACD,CAVD;;AAYA,OAAO,IAAIE,cAAc,GAAG,SAASA,cAAT,CAAwBP,KAAxB,EAA+BQ,KAA/B,EAAsC;AAChE,MAAIC,UAAU,GAAG5C,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB6C,SAAzC,GAAqD7C,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAArF;AACA,MAAI8C,UAAU,GAAGX,KAAK,CAACW,UAAvB;AAAA,MACIC,QAAQ,GAAGZ,KAAK,CAACY,QADrB;AAAA,MAEIC,kBAAkB,GAAGb,KAAK,CAACa,kBAF/B;AAGA,MAAIzB,YAAY,GAAGoB,KAAK,CAACpB,YAAzB;AAAA,MACIC,YAAY,GAAGmB,KAAK,CAACnB,YADzB;AAEA,MAAIyB,UAAU,GAAGL,UAAU,CAAC,CAAD,CAA3B;;AAEA,MAAIK,UAAU,IAAIH,UAAU,KAAK,OAAjC,EAA0C;AACxC,WAAOC,QAAQ,GAAGE,UAAU,CAACR,YAAX,GAA0BlB,YAA7B,GAA4C0B,UAAU,CAACR,YAAtE;AACD;;AAED,MAAIK,UAAU,KAAK,KAAnB,EAA0B;AACxB,WAAOR,kBAAkB,CAACM,UAAD,CAAzB;AACD;;AAED,MAAIE,UAAU,KAAK,SAAnB,EAA8B;AAC5B,WAAOF,UAAU,CAACpB,YAAD,CAAV,CAAyBiB,YAAhC;AACD;;AAED,SAAOO,kBAAkB,IAAI,GAA7B;AACD,CAtBM","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nexport var addAccessibility = function addAccessibility(children, slidesToShow, currentSlide) {\n  var needsTabIndex;\n\n  if (slidesToShow > 1) {\n    return React.Children.map(children, function (child, index) {\n      // create a range from first visible slide to last visible slide\n      var firstVisibleSlide = index >= currentSlide;\n      var lastVisibleSlide = index < slidesToShow + currentSlide;\n      needsTabIndex = firstVisibleSlide && lastVisibleSlide; // if the index of the slide is in range add ariaProps to the slide\n\n      var ariaProps = needsTabIndex ? {\n        'aria-hidden': 'false',\n        tabIndex: 0\n      } : {\n        'aria-hidden': 'true'\n      };\n      return React.cloneElement(child, _objectSpread({}, child.props, ariaProps));\n    });\n  } else {\n    // when slidesToshow is 1\n    return React.Children.map(children, function (child, index) {\n      needsTabIndex = index !== currentSlide;\n      var ariaProps = needsTabIndex ? {\n        'aria-hidden': 'true'\n      } : {\n        'aria-hidden': 'false',\n        tabIndex: 0\n      };\n      return React.cloneElement(child, _objectSpread({}, child.props, ariaProps));\n    });\n  }\n};\nexport var getValidChildren = function getValidChildren(children) {\n  // .toArray automatically removes invalid React children\n  return React.Children.toArray(children);\n};\n\nvar findMaxHeightSlide = function findMaxHeightSlide(slides) {\n  var maxHeight = 0;\n\n  for (var i = 0; i < slides.length; i++) {\n    if (slides[i].offsetHeight > maxHeight) {\n      maxHeight = slides[i].offsetHeight;\n    }\n  }\n\n  return maxHeight;\n};\n\nexport var getSlideHeight = function getSlideHeight(props, state) {\n  var childNodes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var heightMode = props.heightMode,\n      vertical = props.vertical,\n      initialSlideHeight = props.initialSlideHeight;\n  var slidesToShow = state.slidesToShow,\n      currentSlide = state.currentSlide;\n  var firstSlide = childNodes[0];\n\n  if (firstSlide && heightMode === 'first') {\n    return vertical ? firstSlide.offsetHeight * slidesToShow : firstSlide.offsetHeight;\n  }\n\n  if (heightMode === 'max') {\n    return findMaxHeightSlide(childNodes);\n  }\n\n  if (heightMode === 'current') {\n    return childNodes[currentSlide].offsetHeight;\n  }\n\n  return initialSlideHeight || 100;\n};"]},"metadata":{},"sourceType":"module"}